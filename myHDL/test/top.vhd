-- File: top.vhd
-- Generated by MyHDL 0.11
-- Date: Mon Sep 27 09:44:37 2021


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_011.all;

entity top is
    port (
        clk: in std_logic;
        we: in std_logic;
        din: in unsigned(7 downto 0);
        addr: in unsigned(7 downto 0);
        dout: out unsigned(7 downto 0);
        sel: in std_logic
    );
end entity top;
-- clk - clock signal
-- we  - write enable signal for ram
-- din - data input signal for ram
-- addr - address signal for ram or rom
-- dout - data output signal for ram or rom
-- CONTENT - constant data for rom interface
-- sel - select signal. provice choose between ram n rom

architecture MyHDL of top is



signal dout0: unsigned(7 downto 0);
signal dout1: unsigned(7 downto 0);
type t_array_RAM0_mem is array(0 to 128-1) of unsigned(7 downto 0);
signal RAM0_mem: t_array_RAM0_mem;

begin




TOP_ROM0_READ: process (addr) is
begin
    case to_integer(addr) is
        when 0 => dout0 <= "00000000";
        when 1 => dout0 <= "00000001";
        when 2 => dout0 <= "00000010";
        when 3 => dout0 <= "00000011";
        when 4 => dout0 <= "00000100";
        when 5 => dout0 <= "00000101";
        when others => dout0 <= "00000110";
    end case;
end process TOP_ROM0_READ;

TOP_RAM0_WRITE: process (clk) is
begin
    if rising_edge(clk) then
        if bool(we) then
            RAM0_mem(to_integer(addr)) <= din;
        end if;
    end if;
end process TOP_RAM0_WRITE;


dout1 <= RAM0_mem(to_integer(addr));

TOP_MUX0_LOGIC: process (sel, dout0, dout1) is
begin
    if (sel = '0') then
        dout <= dout0;
    else
        dout <= dout1;
    end if;
end process TOP_MUX0_LOGIC;

end architecture MyHDL;
